/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "48500";
    object      Cy;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   nonuniform List<scalar> 
100
(
0.0025201
0.0076821
0.0130936
0.0187665
0.0247136
0.0309482
0.037484
0.0443356
0.0515184
0.0590483
0.0669421
0.0752173
0.0838925
0.0929869
0.102521
0.112515
0.122993
0.133977
0.145492
0.157563
0.170218
0.183484
0.197391
0.21197
0.227254
0.243277
0.260074
0.277682
0.296142
0.315493
0.33578
0.357047
0.379342
0.402714
0.427216
0.452902
0.479829
0.508057
0.53765
0.568672
0.601194
0.635288
0.671029
0.708497
0.747776
0.788954
0.832121
0.877374
0.924814
0.974547
1.02537
1.07495
1.12226
1.16739
1.21046
1.25154
1.29074
1.32814
1.36382
1.39787
1.43035
1.46134
1.49091
1.51912
1.54604
1.57172
1.59622
1.6196
1.6419
1.66318
1.68348
1.70286
1.72134
1.73897
1.7558
1.77185
1.78716
1.80177
1.81571
1.82902
1.84171
1.85381
1.86537
1.87639
1.8869
1.89694
1.90651
1.91564
1.92436
1.93267
1.9406
1.94817
1.95539
1.96228
1.96886
1.97513
1.98111
1.98682
1.99227
1.99746
)
;

boundaryField
{
    bottomWall
    {
        type            calculated;
        value           uniform 0;
    }
    topWall
    {
        type            calculated;
        value           uniform 2;
    }
    sides1_half0
    {
        type            empty;
    }
    sides1_half1
    {
        type            empty;
    }
    sides2_half0
    {
        type            empty;
    }
    sides2_half1
    {
        type            empty;
    }
    inout1_half0
    {
        type            cyclic;
    }
    inout1_half1
    {
        type            cyclic;
    }
    inout2_half0
    {
        type            cyclic;
    }
    inout2_half1
    {
        type            cyclic;
    }
}


// ************************************************************************* //
